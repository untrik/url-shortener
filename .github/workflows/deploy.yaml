name: Deploy App

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'Branch or tag to deploy (e.g. main or v0.0.3)'
        required: true
        default: main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      HOST: root@185.161.64.187          # например: root@91.219.190.2
      DEPLOY_DIR: /root/apps/url-shortener

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref }}

      - name: Prepare SSH key
        run: |
          printf '%s\n' "${{ secrets.DEPLOY_SSH_KEY }}" > deploy_key.pem
          chmod 600 deploy_key.pem

      - name: Check SSH connectivity
        run: |
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no -o ConnectTimeout=10 "$HOST" "echo ok"

      - name: Install Docker & Compose on server (if missing)
        run: |
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no "$HOST" bash <<'SH'
          set -e
          if ! command -v docker >/dev/null 2>&1; then
            apt-get update
            apt-get install -y docker.io docker-compose-plugin
            systemctl enable --now docker
          fi
          docker --version
          docker compose version
          SH



      - name: Upload repo to server
        run: |
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no "$HOST" "mkdir -p '$DEPLOY_DIR'"
          rsync -az --delete -e "ssh -i deploy_key.pem -o StrictHostKeyChecking=no" \
            --exclude '.git' ./ "$HOST":"$DEPLOY_DIR"/

      - name: Create .env on server
        run: |
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no "$HOST" "\
            cd '$DEPLOY_DIR' && \
            printf 'HTTP_SERVER_PASSWORD=%s\n' '${{ secrets.AUTH_PASS }}' > .env && \
            chmod 600 .env"

      - name: Build & run with docker compose
        run: |
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no "$HOST" "\
            cd '$DEPLOY_DIR' && \
            docker compose --env-file .env up -d --build && \
            docker compose ps && \
            docker compose logs -n 50 backend || true"
